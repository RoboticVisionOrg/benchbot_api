#ifndef __BENCHBOT_H
#define __BENCHBOT_H

#include <jsoncpp/json/json.h>
#include <opencv2/opencv.hpp>
#include <curl/curl.h>
#include "grid_map.hpp"


class BenchBot {
    public:
    BenchBot(std::string uri);
    ~BenchBot();

    Json::Value get(std::string route="");
    Json::Value send(std::string route, Json::Value data);

    cv::Mat getImage(std::string route="image");
    GridMap getGridMap(std::string route="map");

    bool isDone();

    /**
     * Returns the status code generated by curl_easy_perform (e.g. CURLE_OK=0)
     * @return int status code
     */
    int status();

    protected:
    static size_t write_data(void *buffer, size_t size, size_t nmemb, void *userp);


    private:
    CURL *curl;
    CURLcode res;
        
    std::string message;
    std::string uri;
};

#endif